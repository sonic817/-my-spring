<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TestMapper">

    <insert id="asd">
        insert into user_session (user_code_no, session) values(#{userCodeNo}, #{htmlCode})
        ;
    </insert>

    <select id="getCountryList" resultType="com.example.demo.domain.GetCountry">
        SELECT
            c.country_no,
            c.country_code,
            c.country_name_kr,
            c.country_name_en,
            c.insert_ts,
            c.update_ts,
            '' as area_list
        FROM country AS c
        ;
    </select>

    <select id="getAreaList" resultType="com.example.demo.domain.GetArea">
        SELECT
        a.country_no,
        a.area_no,
        a.area_name_kr,
        a.area_name_en,
        a.area_useflag,
        a.insert_ts,
        a.update_ts,
        '' as region_list
        FROM area AS a
        WHERE a.country_no = #{countryNo}
        ;
    </select>

    <select id="getRegionList" resultType="com.example.demo.domain.GetRegion">
        SELECT
        r.area_no,
        r.region_no,
        r.region_no_kr,
        r.region_no_en,
        r.region_useflag,
        r.insert_ts,
        r.update_ts,
        '' as area_list
        FROM region AS r
        WHERE r.area_no = #{areaNo}
        ;
    </select>

    <select id="getPlaceCategory" resultType="com.example.demo.domain.GetCategory">
        SELECT
        c.category_no,
        c.category_name,
        c.category_kinds_no,
        p.insert_ts,
        p.update_ts
        FROM
        trip_place_category AS p LEFT JOIN category AS c ON p.category_no = c.category_no
        WHERE
        trip_place_no = #{tripNo}
        ;
    </select>

    <insert id="insertTripCourseDiaryLike">
        insert INTO trip_course_diary_like
        (user_code_no, trip_course_diary_no)
        VALUES
        (#{userCodeNo}, #{tripCourseDiaryNo})
        ;
    </insert>

    <delete id="deleteTripCourseDiaryLike">
        delete from trip_course_diary_like
        where
        user_code_no = #{userCodeNo} and trip_course_diary_no = #{tripCourseDiaryNo}
        ;
    </delete>

    <select id="getHotCourse" resultType="com.example.demo.domain.GetCourse">
        SELECT
        c.user_code_no,
        u.nickname,
        c.trip_course_no,
        c.trip_course_code,
        c.trip_course_name,
        c.trip_course_text,
        c.star_rating,
        IFNULL(tcl.like_count, 0) as like_count,
        '' as category_list,
        c.trip_course_get_path,
        c.trip_course_set_path,
        c.insert_ts,
        c.update_ts
        FROM
        trip_course AS c
        LEFT JOIN user_code AS u ON c.user_code_no = u.user_code_no
        LEFT JOIN (
        SELECT tcl.trip_course_no, COUNT(*) as like_count FROM trip_course_like as tcl
        GROUP BY tcl.trip_course_no
        ) AS tcl ON c.trip_course_no = tcl.trip_course_no
        WHERE
        c.star_rating > #{starRating}
        ;
    </select>

    <select id="getCourseCategory" resultType="com.example.demo.domain.GetCategory">
        SELECT
        c.category_no,
        c.category_name,
        c.categoryKindsNo;
        c.insert_ts,
        c.update_ts
        FROM
        trip_course_category as tcc
        INNER JOIN category AS c ON tcc.category_no = c.category_no
        WHERE
        tcc.trip_course_no = #{tripNo}
        ;
    </select>

    <select id="getTripReport" resultType="com.example.demo.domain.GetTripReport">
        SELECT
        tc.user_code_no,
        ucn.nickname,
        ucn.user_id,
        tc.trip_course_no,
        tc.trip_course_code,
        IFNULL(tcl.like_count, 0) as like_count,
        tc.trip_course_name,
        tc.trip_course_get_path,
        tc.insert_ts,
        tc.update_ts,
        '' AS recommend_mate,
        '' AS recommend_trip_place
        FROM trip_course AS tc
        LEFT JOIN user_code AS ucn ON tc.user_code_no = ucn.user_code_no
        LEFT JOIN (
        SELECT tcl.trip_course_no, COUNT(*) AS like_count FROM trip_course_like as tcl
        GROUP BY tcl.trip_course_no
        ) AS tcl ON tc.trip_course_no = tcl.trip_course_no
        WHERE
        tc.user_code_no = #{userCodeNo} AND tc.trip_course_no = #{tripCourseNo}
        LIMIT 1
        ;
    </select>

    <select id="getPlacePosInTripCourseNo" resultType="HashMap">
        SELECT tp.trip_place_no, tp.trip_place_latitude, tp.trip_place_longitude FROM trip_place AS tp WHERE tp.trip_place_no in
        (
        SELECT tcp.trip_place_no FROM trip_course_place AS tcp WHERE tcp.trip_course_no = #{tripCourseNo}
        )
        and tp.area_no = 1
        ;
    </select>

<!--    ■ trip_place AS tp WHERE tp.area_no = 1; 수정 필요-->
    <select id="getPlacePosInTripPlaceData" resultType="HashMap">
        SELECT
            tp.trip_place_no,
            tp.trip_place_latitude,
            tp.trip_place_longitude
        FROM
            trip_place AS tp WHERE tp.area_no = 1
        ;
    </select>

    <select id="getPlacesRecommand" resultType="com.example.demo.domain.GetPlace">
        SELECT
            p.user_code_no,
            u.nickname,
            p.trip_place_no,
            p.trip_place_code,
            p.trip_place_name,
            p.trip_place_add0,
            p.trip_place_add1,
            p.trip_place_add2,
            p.trip_place_add3,
            p.trip_place_text,
            p.area_no,
            p.world_flag,
            p.star_rating,
            IFNULL(tpl.like_count, 0) AS like_count,
            '' as category_list,
            p.trip_place_latitude,
            p.trip_place_longitude,
            p.trip_place_get_path,
            p.trip_place_set_path,
            p.insert_ts,
            p.update_ts
        FROM trip_place AS p
        LEFT JOIN user_code AS u ON p.user_code_no = u.user_code_no
        LEFT JOIN (
        SELECT tpl.trip_place_no, COUNT(*) as like_count FROM trip_place_like as tpl
        GROUP BY tpl.trip_place_no
        ) AS tpl ON p.trip_place_no = tpl.trip_place_no
        WHERE
            p.trip_place_no in
        <foreach collection="list" item="arr" open="(" close=")" separator=",">
            #{arr}
        </foreach>
        order by like_count desc
        limit 3
        ;
    </select>

    <select id="getLikeMate" resultType="Int">
        SELECT DISTINCT tpl.user_code_no
        FROM
        trip_place_like as tpl
        where
        tpl.trip_place_no IN (
        SELECT tcp.trip_place_no FROM trip_course_place AS tcp WHERE tcp.trip_course_no = #{tripCourseNo}
        );
    </select>

    <select id="getMateOfMate" resultType="Int">
        SELECT distinct f.follower_user_code_no
        FROM
        following AS f
        WHERE
        f.user_code_no IN (SELECT distinct ff.follower_user_code_no FROM following as ff WHERE ff.user_code_no = #{userCodeNo});
        ;
    </select>

    <select id="getMateRecommand" resultType="com.example.demo.domain.GetFollowing">
        SELECT
            uc.user_code_no,
            uc.nickname,
            uc.user_id
        FROM
            user_code AS uc
        WHERE
        uc.user_code_no in
        <foreach collection="list" item="arr" open="(" close=")" separator=",">
            #{arr}
        </foreach>
        limit 3
        ;
    </select>

    <select id="getPlaceMoreBySearch" resultType="com.example.demo.domain.GetPlace">
        SELECT
        p.user_code_no,
        u.nickname,
        p.trip_place_no,
        p.trip_place_code,
        p.trip_place_name,
        p.trip_place_add0,
        p.trip_place_add1,
        p.trip_place_add2,
        p.trip_place_add3,
        p.trip_place_text,
        p.area_no,
        p.world_flag,
        p.star_rating,
        IFNULL(tpl.like_count, 0) AS like_count,
        '' as category_list,
        p.trip_place_latitude,
        p.trip_place_longitude,
        p.trip_place_get_path,
        p.trip_place_set_path,
        p.insert_ts,
        p.update_ts
        FROM
        trip_place AS p
        LEFT JOIN
        user_code AS u ON p.user_code_no = u.user_code_no
        LEFT JOIN (
        SELECT tpl.trip_place_no, COUNT(*) as like_count FROM trip_place_like as tpl
        GROUP BY tpl.trip_place_no
        ) AS tpl ON p.trip_place_no = tpl.trip_place_no
        WHERE
        p.trip_place_name like CONCAT('%',#{inputText},'%') or
        p.trip_place_add0 + p.trip_place_add1 + p.trip_place_add2 + p.trip_place_add3 like CONCAT('%',#{inputText},'%')
        limit #{limitStart}, #{limitEnd}
        ;
    </select>

    <select id="getUserInfo" resultType="com.example.demo.domain.UserCode">
        SELECT
        uc.user_code_no,
        uc.device_code_no,
        uc.birthday,
        uc.user_hp,
        uc.user_seq,
        uc.api_Id,
        uc.user_id,
        uc.user_email,
        uc.nickname,
        uc.entitle_no,
        uc.experience,
        f.feed_count,
        CAST('' as int) as feed_follower,
        CAST('' as int) as feed_following,
        uc.point,
        uc.purple,
        uc.login_id,
        uc.password,
        uc.role_type,
        uc.cidi,
        uc.user_name,
        uc.insert_ts,
        uc.update_ts
        FROM
        user_code AS uc
        LEFT JOIN (
        SELECT f.user_code_no, COUNT(f.feed_no) AS feed_count FROM feed AS f WHERE f.user_code_no = #{userCodeNo} LIMIT 1) AS f
        ON uc.user_code_no = f.user_code_no
        WHERE
        uc.user_code_no = #{userCodeNo}
        limit 1
        ;
    </select>

    <select id="getFeedFollower" resultType="HashMap">
        SELECT fw.follower_user_code_no, COUNT(fw.user_code_no) as feed_follower FROM following as fw
        WHERE
        fw.follower_user_code_no = #{userCodeNo}
        LIMIT 1
        ;
    </select>

    <select id="getFeedFollowing" resultType="HashMap">
        SELECT fw.user_code_no, COUNT(fw.follower_user_code_no) AS feed_following FROM following AS fw
        WHERE
        fw.user_code_no = #{userCodeNo}
        LIMIT 1
        ;
    </select>

    <select id="getFeedMine" resultType="com.example.demo.domain.GetFeedMine">
        SELECT
        f.user_code_no,
        uc.user_id,
        uc.nickname,
        f.feed_no,
        f.feed_code,
        f.feed_text,
        f.feed_loc_name,
        f.feed_loc_longitude,
        f.feed_loc_latitude,
        f.feed_get_path,
        f.feed_set_path,
        '' as feed_comment,
        '' as feed_like,
        CAST('' as int) as comment_count,
        fl.feed_like_count,
        if(ISNULL(fl2.feed_no), 0, 1) AS feed_like_state,
        f.insert_ts,
        f.update_ts
        FROM feed AS f
        LEFT JOIN user_code AS uc ON f.user_code_no = uc.user_code_no
        LEFT JOIN (SELECT fl.feed_no, COUNT(*) as feed_like_count FROM feed_like AS fl GROUP BY fl.feed_no) as fl ON f.feed_no = fl.feed_no
        LEFT JOIN (SELECT DISTINCT * FROM feed_like AS fl2 WHERE fl2.user_code_no = #{userCodeNo}) as fl2 ON f.feed_no = fl2.feed_no
        WHERE f.user_code_no = #{userCodeNo}
        limit #{limitStart}, #{limitEnd}
        ;
    </select>

    <select id="getFeedComments" resultType="com.example.demo.domain.GetFeedComments">
        SELECT
        f.user_code_no,
        u.user_id,
        u.nickname,
        f.feed_comment_no,
        f.feed_no,
        f.feed_comment_text,
        f.feed_parent,
        f.feed_depth,
        f.insert_ts,
        '' as get_feed_comment_ss
        FROM feed_comment AS f
        LEFT JOIN user_code AS u ON f.user_code_no = u.user_code_no
        WHERE
        feed_no = #{feedNo} and
        f.feed_parent IS null
        ORDER BY
        insert_ts desc
        ;
    </select>

    <select id="getFeedCommentSs" resultType="com.example.demo.domain.GetFeedCommentSs">
        SELECT
        f.user_code_no,
        u.user_id,
        u.nickname,
        f.feed_comment_no,
        f.feed_no,
        f.feed_comment_text,
        f.feed_parent,
        f.feed_depth,
        f.insert_ts
        FROM feed_comment AS f
        LEFT JOIN user_code AS u ON f.user_code_no = u.user_code_no
        WHERE
        feed_no = #{feedNo} and
        f.feed_parent IS not null and
        f.feed_parent = #{feedCommentNo}
        ORDER BY
        f.insert_ts desc
        ;
    </select>

    <select id="getFeedLike" resultType="com.example.demo.domain.GetFeedLike">
        SELECT
        l.user_code_no,
        u.nickname
        FROM
        feed_like AS l
        LEFT JOIN user_code AS u ON l.user_code_no = u.user_code_no
        WHERE
        feed_no = #{feedNo};
        ;
    </select>

    <select id="getCourseMoreBySearch" resultType="com.example.demo.domain.GetCourseSearch">
        SELECT
        DISTINCT  *
        FROM (
        SELECT
        a.trip_course_no,
        a.trip_course_name,
        a.place_count,
        CASE
        WHEN a.add like CONCAT('%',#{inputText},'%')
        THEN '제주도'
        ELSE null
        END AS aa,
        a.trip_course_get_path,
        a.insert_ts,
        a.update_ts
        FROM
        (
        SELECT
        tcp.trip_course_no,
        tc.trip_course_name,
        t.place_count,
        CONCAT(tp.trip_place_add0, ' ', tp.trip_place_add1, ' ', tp.trip_place_add2, ' ', tp.trip_place_add3) AS 'add',
        tc.trip_course_get_path,
        tc.insert_ts
        FROM trip_course_place AS tcp
        LEFT JOIN trip_place AS tp ON tcp.trip_place_no = tp.trip_place_no
        LEFT JOIN (
        SELECT tcp.trip_course_no, count(tcp.trip_course_place_no) AS place_count from trip_course_place AS tcp
        group BY tcp.trip_course_no
        ) AS t ON tcp.trip_course_no = t.trip_course_no
        LEFT JOIN trip_course AS tc ON tcp.trip_course_no = tc.trip_course_no
        ) AS a
        ) AS b WHERE b.aa IS NOT NULL
        ORDER BY b.insert_ts DESC
        limit #{limitStart}, #{limitEnd}
        ;
    </select>

    <insert id="setCourse" parameterType="com.example.demo.domain.SetCourse" useGeneratedKeys="true" keyProperty="tripCourseNo">
        INSERT INTO trip_course
        (user_code_no, trip_course_no, trip_course_code, trip_course_name, trip_course_text, star_rating, review_count, trip_course_get_path, trip_course_set_path, insert_ts, update_ts)
        VALUES
        (#{userCodeNo}, #{tripCourseNo}, #{tripCourseCode}, #{tripCourseName}, #{tripCourseText}, #{starRating}, #{reviewCount}, #{tripCourseGetPath}, #{tripCourseSetPath}, #{insertTs}, #{updateTs})
        ;
    </insert>

    <insert id="setCoursePlace" parameterType="java.util.List">
        INSERT INTO trip_course_place
        (trip_course_no, trip_place_no)
        VALUES
        <foreach collection="list" item="arr" separator=",">
        (
            ${arr.tripCourseNo},
            ${arr.tripPlaceNo}
        )
        </foreach>
        ;
    </insert>

    <insert id="insertToken">
        insert into user_fcm
        (user_code_no, user_fcm_token)
        values
        (#{userCodeNo}, #{userFcmToken});
        ;
    </insert>

    <select id="getCourseBookmark" resultType="com.example.demo.domain.GetCourseBookmark">
        SELECT
        book.user_code_no,
        c.user_code_no as user_code_no_first,
        USER.nickname,
        book.trip_course_no,
        c.trip_course_name,
        c.star_rating,
        ifnull(tcl.like_count, 0) as like_count,
        tcp.place_count,
        '' as category_list,
        c.trip_course_get_path,
        c.insert_ts
        FROM
        trip_course_bookmarked as book
        LEFT JOIN trip_course AS c ON book.trip_course_no = c.trip_course_no
        LEFT JOIN user_code AS USER ON c.user_code_no = USER.user_code_no
        LEFT JOIN (
        SELECT tcl.trip_course_no, COUNT(*) as like_count FROM trip_course_like as tcl
        GROUP BY tcl.trip_course_no
        ) AS tcl ON book.trip_course_no = tcl.trip_course_no
        LEFT JOIN (
        SELECT tcp.trip_course_no, COUNT(*) AS place_count from trip_course_place AS tcp group by tcp.trip_course_no
        ) AS tcp ON tcp.trip_course_no = book.trip_course_no
        WHERE
        book.user_code_no = #{userCodeNo}
        ORDER BY
        book.insert_ts desc
        ;
    </select>
</mapper>